import NextAuth from "next-auth"
import { PrismaAdapter } from "@auth/prisma-adapter"
import GitHub from "next-auth/providers/github"
import Google from "next-auth/providers/google"
import Resend from "next-auth/providers/resend"
import { prisma } from "./src/lib/prisma"


export const { handlers, auth, signIn, signOut } = NextAuth({
  adapter: PrismaAdapter(prisma),
  debug: true, //process.env.NODE_ENV === "development",
  providers: [
    Resend({
      // If your environment variable is named differently than default
      apiKey: process.env.AUTH_RESEND_KEY,
      from: "no-reply@company.com" //change this 
    }),
      Google({
          clientId: process.env.AUTH_GOOGLE_ID as string,
          clientSecret: process.env.AUTH_GOOGLE_SECRET as string,
      }),
      GitHub({
        clientId: process.env.AUTH_GITHUB_ID as string,
        clientSecret: process.env.AUTH_GITHUB_SECRET as string,
      }),
  ],
  callbacks: {
      async jwt({ token, user, session }) {
          console.log("jwt callback :", { token, user, session });
          //pass in user id and address to token
          if (user) {
              return {
                  ...token,
                  id: user.id,
              };
          }
          return token;
      },
      async session({ session, token, user }) {
          console.log("session callback :", { session, token, user });
          //pass in user id
          return {
              ...session,
              user: {
                  ...session.user,
                  id: token.id,
              }
          };
      },
      async redirect({ url, baseUrl }) {
          // Allows relative callback URLs
          if (url.startsWith("/")) return `${baseUrl}${url}`
          // Allows callback URLs on the same origin
          else if (new URL(url).origin === baseUrl) return url
          return baseUrl
      },
  },
  secret: process.env.AUTH_SECRET as string,
  session: {
      strategy: "jwt",
  },
  pages: {
      signIn: '/signin',
      error: '/error',
  },
})

/*export const { handlers, auth, signIn, signOut } = NextAuth({
  debug: true,
  adapter: PrismaAdapter(prisma),
  providers: [Resend,GitHub, Google],
})
*/